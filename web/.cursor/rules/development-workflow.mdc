---
alwaysApply: true
---

# 开发工作流程

## 项目脚本
- `pnpm dev` - 启动开发服务器
- `pnpm build` - 构建生产版本
- `pnpm lint` - 运行 ESLint 检查
- `pnpm preview` - 预览构建结果

## 代码质量
- 使用 ESLint 进行代码规范检查
- 遵循 TypeScript 严格模式
- 保持代码风格一致

## 开发环境
- 使用 Vite 作为构建工具，支持热模块替换 (HMR)
- 支持 TypeScript 和 JSX
- 现代化的开发体验

## 文件组织
- 源代码放在 `src/` 目录
- 静态资源放在 `public/` 目录
- 配置文件在项目根目录
# 开发工作流程

## 项目脚本
- `pnpm dev` - 启动开发服务器
- `pnpm build` - 构建生产版本
- `pnpm lint` - 运行 ESLint 检查
- `pnpm preview` - 预览构建结果

## 代码质量
- 使用 ESLint 进行代码规范检查
- 遵循 TypeScript 严格模式
- 保持代码风格一致

## 开发环境
- 使用 Vite 作为构建工具，支持热模块替换 (HMR)
- 支持 TypeScript 和 JSX
- 现代化的开发体验

## 文件组织
- 源代码放在 `src/` 目录
- 静态资源放在 `public/` 目录
- 配置文件在项目根目录
